{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","event","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","console","log","width","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1161251.chunk.js","sourcesContent":["import {useState} from 'react'\r\nimport {sendMessage, isTyping} from 'react-chat-engine'\r\nimport {SendOutlined, PictureOutlined} from '@ant-design/icons'\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const {chatId, creds} = props\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const text = value.trim()\r\n        if(text.length > 0) sendMessage(creds, chatId, {text})\r\n\r\n        setValue('')\r\n    }\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        isTyping(props, chatId)\r\n    }\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, {files: event.target.files, text: ''})\r\n    }\r\n    return(\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\"\r\n                placeholder=\"Send a Message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"img-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{display:'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm","const MyMessage = ({message}) => {\r\n    if(message?.attachments?.length>0){\r\n        return (\r\n            <img \r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float:'right' }}\r\n            />\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"message\" style={{float:'right', marginRight:'18px', color:'white', backgroundColor:'#3b2a50'}}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage","const TheirMessage = ({message, lastMessage}) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username\r\n    return(\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            {\r\n                message?.attachments?.length>0\r\n                    ? (\r\n                        <img \r\n                            src={message.attachments[0].file}\r\n                            alt=\"message-attachment\"\r\n                            className=\"message-image\"\r\n                            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                        />\r\n                    )\r\n                    :(\r\n                        <div className=\"message\" style={{float:'left',backgroundColor:'#cabcdc', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n                            {message.text}\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage","import MessageForm from \"./MessageForm\"\r\nimport MyMessage from \"./MyMessage\"\r\nimport TheirMessage from \"./TheirMessage\"\r\n\r\nconst ChatFeed = (props) => {\r\n    const {chats, activeChat, userName, messages} = props\r\n    const chat = chats && chats[activeChat]\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left', backgroundImage: `url(${person?.person?.avatar}`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages)\r\n        \r\n        return keys.map((key, index) => {\r\n            const message = messages[key]\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1]\r\n            const isMyMessage = userName === message.sender.username\r\n            console.log(message)\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message} />\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    if(!chat) return 'Loading...'\r\n\r\n    return(\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat?.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map(person => ` ${person.person.username},`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height:'100px'}} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed","import { useState } from \"react\"\nimport axios from 'axios'\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const authObject = {'Project-ID': \"12de79ea-e20f-42ad-b842-160bd95ef21d\", \n    'User-Name': username, \n    'User-Secret': password}\n\n    try{\n      await axios.get('https://api.chatengine.io/chats', {headers: authObject})\n\n      localStorage.setItem('username', username)\n      localStorage.setItem('password', password)\n\n      window.location.reload()\n    }catch(error){\n      setError('Oops, Incorrect Credentials!')\n    }\n  }\n\n  return(\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">Horizonlair Chat</h1>\n        <form onSubmit={handleSubmit}>\n          <input \n            type=\"text\" \n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"input\"\n            placeholder=\"Username\"\n            required\n          />\n          <input \n            type=\"password\" \n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"input\"\n            placeholder=\"Password\"\n            required\n          />\n          <div align=\"center\">\n            <button type=\"submit\" className=\"button\">\n              <span>Start Chatting</span>\n            </button>\n          </div>\n          <h2 className=\"error\">{error}</h2>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginForm","import React from 'react'\r\nimport { ChatEngine } from 'react-chat-engine'\r\nimport './App.css'\r\nimport ChatFeed from './components/ChatFeed.jsx'\r\nimport LoginForm from './components/LoginForm'\r\n\r\nconst App = () => {\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n    return (\r\n        <ChatEngine \r\n            height=\"100vh\"\r\n            projectID=\"12de79ea-e20f-42ad-b842-160bd95ef21d\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}